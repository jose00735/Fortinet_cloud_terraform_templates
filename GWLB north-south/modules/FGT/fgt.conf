Content-Type: multipart/mixed; boundary="==AWS=="
MIME-Version: 1.0

--==AWS==
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0

config system global
set hostname primary
set admin-sport 10443
end
config system interface
edit port1
set alias "public"
set allowaccess https ssh 
next
edit port2
set alias "private"
set allowaccess ping probe-response
end
config system geneve
edit "awsgeneve"
set interface "port2"
set type ppp
set remote-ip ${ GWLB_interface_ip }
end
config firewall address 
%{ for address in private_subnet_address ~}
edit ${ address }_address
set subnet ${ address }
set allow-routing enable
next
%{ endfor ~}
end
config system admin
edit ${ admin-user }
set password ${ password }
set accprofile super_admin
end
config router static
edit 0
set distance 5
set priority 100
set device "awsgeneve"
end 
config router policy
%{ for address in private_subnet_address ~}
edit 0
set input-device "awsgeneve"
set srcaddr all
set dstaddr ${ address }_address
set output-device "awsgeneve"
next
%{ endfor ~}
%{ for address in private_subnet_address ~}
edit 0
set input-device "awsgeneve"
set srcaddr ${ address }_address
set dstaddr all
set output-device "awsgeneve"
next
%{ endfor ~}
end
config firewall policy 
%{ for address in private_subnet_address ~}
edit 0
set name client_${address}_in
set srcintf awsgeneve
set dstintf awsgeneve
set action accept
set srcaddr all 
set dstaddr ${ address }_address
set service ALL 
set schedule always
next
%{ endfor ~}
%{ for address in private_subnet_address ~}
edit 0
set name client_${address}_out
set srcintf awsgeneve
set dstintf awsgeneve
set action accept
set srcaddr ${ address }_address
set dstaddr all
set service ALL 
set schedule always
next
%{ endfor ~}
end

--==AWS==--